pipeline {
    agent {
        docker {
            image 'maven:3.6.1-jdk-8-alpine'
            args '-v $HOME/.m2:/root/.m2'
        }
    }

    stages {

        stage('Build') { 
            steps {
                echo 'Starting BUILD.....'
                echo 'Compiling worker app'
		dir('worker'){
		    sh 'mvn compile' 
		}
                echo '### FINISHED BUILDING ###'
            }
        }

        stage('Test') { 
            steps {
                echo 'Starting TEST.....'
		dir('worker'){
		    sh 'mvn clean test' 
		}
                echo '### FINISHED TESTING ###'
            }
        }

        stage('Package') { 
	    when {
		branch 'master'
		changeset "**/worker/**"
	    }
            steps {
                echo 'Starting PACKGING.....'
		dir('worker'){
		    sh 'mvn package -DskipTests'
		}
		archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
                echo '### FINISHED PACKAGING ###' 
            }
        }

        stage('Docker-package') { 
	    when {
		changeset "**/worker/**"
	    }
            steps {
                echo 'Starting PACKAGING the app with docker.....'
                script{
                  docker.withRegistry('https://index.docker.io/v1', 'dockerlogin') {
                     def workerImage = docker.build("mcberra/worker-app:v${env.BUILD_ID}", "./worker")
		     workerImage.push()
                     workerImage.push("${env.BRANCH_NAME}")
                  }
                }
            }
        }

    }
        post { 
            always { 
                echo 'This pipeline run is completed!'
        }
    }
}
